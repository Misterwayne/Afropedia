# Afropedia .gitignore
# Comprehensive ignore file for Python + Next.js + Supabase project

# ===========================================
# ENVIRONMENT & CONFIGURATION FILES
# ===========================================
.env
.env.local
.env.development
.env.production
.env.staging
.env.test
.env.*.local
*.env

# Configuration files with secrets
config.json
secrets.json
credentials.json
firebase-config.json

# ===========================================
# PYTHON BACKEND
# ===========================================
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# ===========================================
# NODE.JS / NEXT.JS FRONTEND
# ===========================================
# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next/
out/

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# Storybook build outputs
.out
.storybook-out
storybook-static

# Temporary folders
tmp/
temp/

# ===========================================
# DATABASE & LOGS
# ===========================================
# Database files
*.db
*.sqlite
*.sqlite3
*.db-journal

# Log files
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# ===========================================
# SSL & SECURITY
# ===========================================
# SSL certificates
ssl/
*.pem
*.key
*.crt
*.csr
*.p12
*.pfx

# Security keys
*.pem
*.key
*.crt
*.csr
*.p12
*.pfx
secrets/
keys/

# ===========================================
# MEDIA & UPLOADS
# ===========================================
# Uploaded files
uploads/
media/
static/uploads/
public/uploads/

# Generated files
generated/
temp_files/

# ===========================================
# IDE & EDITORS
# ===========================================
# VSCode
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# JetBrains IDEs
.idea/
*.swp
*.swo
*~

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ===========================================
# OPERATING SYSTEM
# ===========================================
# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ===========================================
# DEPLOYMENT & CI/CD
# ===========================================
# Deployment files
.vercel
.railway
.netlify
.firebase
.aws
.azure

# CI/CD
.github/workflows/secrets.yml
.gitlab-ci.yml
.travis.yml
.circleci/
azure-pipelines.yml

# Docker
.dockerignore
docker-compose.override.yml

# ===========================================
# TESTING & COVERAGE
# ===========================================
# Test results
test-results/
coverage/
.nyc_output/
junit.xml

# Playwright
test-results/
playwright-report/
playwright/.cache/

# Test files (keep local but don't commit)
test_*.py
*_test.py
test-*.py
test_*.sh
test-*.sh
*_test.sh
populate_test_data.py
test_population.py
test_auth.py
test_endpoints.py
test_moderation.py
test_peer_review.py
test_source_*.py
run-all-tests.sh
test-features.sh
test-frontend-automated.sh
test-deployment.sh
test-frontend-features.md

# ===========================================
# MISC
# ===========================================
# Backup files
*.bak
*.backup
*.old
*.orig

# Archive files
*.zip
*.tar.gz
*.rar
*.7z

# Temporary files
*.tmp
*.temp
.tmp/
.temp/

# Lock files (keep package-lock.json for consistency)
# package-lock.json
yarn.lock
pnpm-lock.yaml

# ===========================================
# AFROPEDIA SPECIFIC
# ===========================================
# Generated documentation
docs/build/
docs/_build/

# Database dumps
*.sql
*.dump

# MeiliSearch data
meilisearch-data/

# Generated API docs
api-docs/

# Production logs
production.log
error.log
access.log

# Backup database
*.db.backup
*.sqlite.backup

# Generated certificates
certificates/
certs/

# Local development files
local/
dev/
development/

# ===========================================
# END OF .gitignore
# ===========================================